 declare i32 @printf(i8*, ...)
 declare void @exit(i32)  
 @.int_specifier = constant [4 x i8] c"%d\0A\00"
 @.str_specifier = constant [4 x i8] c"%s\0A\00"
  define void @printi(i32) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) 
  ret void  } 
  define void @print(i8*) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) 
  ret void } 
define void @checkDay(i32) {
checkDay:

	%1 = alloca i32
	store i32 %0 , i32* %1
	%2 = alloca i32
	store i32 0 , i32* %2
	%3 = load i32 , i32* %2
	call void @printi(i32 %3)
}
define void @main() {
main:

	%0 = alloca i32
	store i32 2 , i32* %0
	%1 = alloca i32
	store i32 2 , i32* %1
	%2 = load i32 , i32* %1
	call void @printi(i32 %2)
	%3 = alloca i32
	store i32 0 , i32* %3
	%4 = alloca i32
	store i32 0 , i32* %4
	%5 = load i32 , i32* %4
	call void @printi(i32 %5)
	%6 = alloca i32
	%7 = alloca i32
	store i32 0 , i32* %7
	%8 = alloca i32
	store i32 0 , i32* %8
	%9 = load i32 , i32* %8
	call void @printi(i32 %9)
	ret void
}
