 declare i32 @printf(i8*, ...)
 declare void @exit(i32)  
 @.int_specifier = constant [4 x i8] c"%d\0A\00"
 @.str_specifier = constant [2 x i8] c"%s"
  define void @printi(i32) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) 
  ret void  } 
  define void @print(i8*) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([2 x i8], [2 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) 
  ret void } 
define void @main() {
main:

	%0 = add i32 0 , 4
	%1 = add i32 0 , 5
	%2 = sub  i32 %0 , %1
	%3 = trunc i32 %2 to i8
	%4 = zext i8 %3 to i32
	%5 = alloca i32
	store i32 %4 , i32* %5
	%6 = alloca i32
	%7 = load i32 , i32* %5
	store i32 %7 , i32* %6
	%8 = load i32 , i32* %6
	call void @printi(i32 %8)
	%9 = add i32 0 , 2
	%10 = load i32, i32* %6
	%11 = udiv  i32 %9 , %10
	%12 = trunc i32 %11 to i8
	%13 = zext i8 %12 to i32
	%14 = alloca i32
	store i32 %13 , i32* %14
	%15 = load i32 , i32* %14
	store i32 %15 , i32* %6
	%16 = load i32 , i32* %6
	call void @printi(i32 %16)
	%17 = alloca [4 x i8]
	store [4 x i8] c"s2\0A\00" , [4 x i8]* %17
	%18 = getelementptr [4 x i8] , [4 x i8]* %17, i64 0, i64 0
	call void @print(i8* %18)
	ret void
}
