 declare i32 @printf(i8*, ...)
 declare void @exit(i32)  
 @.int_specifier = constant [4 x i8] c"%d\0A\00"
 @.str_specifier = constant [2 x i8] c"%s" 
  define void @printi(i32) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) 
  ret void  } 
  define void @print(i8*) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([2 x i8], [2 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) 
  ret void } 
define void @checkDay(i32) {
checkDay:

	%1 = alloca i32
	store i32 %0 , i32* %1
	%2 = alloca i32
	%3 = load i32 , i32* %1
	store i32 %3 , i32* %2
	%4 = alloca i1
	%5 = load i32, i32* %2
	%6 = add i32  0 , 2
	%7 = icmp eq  i32 %5 , %6
	store i1 %7 , i1* %4
	%8 = load i1, i1* %4
	br i1 %8 , label %label_25, label %label_63
label_25:
	%9 = alloca [32 x i8]
	store [32 x i8] c"~IT'S TAAACO TUUUUUUESDAAAAY!~\0A\00" , [32 x i8]* %9
	%10 = getelementptr [32 x i8] , [32 x i8]* %9, i64 0, i64 0
	call void @print(i8* %10)
	%11 = alloca [25 x i8]
	store [25 x i8] c"One taco for me please!\0A\00" , [25 x i8]* %11
	%12 = getelementptr [25 x i8] , [25 x i8]* %11, i64 0, i64 0
	call void @print(i8* %12)
	%13 = alloca i32
	store i32 0 , i32* %13
	br label %label_37
label_37:
	%14 = alloca i32
	%15 = load i32 , i32* %1
	store i32 %15 , i32* %14
	%16 = alloca i1
	%17 = load i32, i32* %13
	%18 = load i32, i32* %14
	%19 = icmp slt  i32 %17 , %18
	store i1 %19 , i1* %16
	%20 = load i1, i1* %16
	br i1 %20 , label %label_48, label %label_61
label_48:
	%21 = alloca [29 x i8]
	store [29 x i8] c"Another taco for me please!\0A\00" , [29 x i8]* %21
	%22 = getelementptr [29 x i8] , [29 x i8]* %21, i64 0, i64 0
	call void @print(i8* %22)
	%23 = load i32, i32* %13
	%24 = add i32 0 , 1
	%25 = add  i32 %23 , %24
	%26 = alloca i32
	store i32 %25 , i32* %26
	%27 = load i32 , i32* %26
	store i32 %27 , i32* %13
	br label %label_37
label_61:
	br label %label_63
label_63:
	ret void
}
define void @main() {
main:

	%0 = alloca i32
	%1 = load i32 , i32* 
	store i32 %1 , i32* %0
	call void @checkDay(i32 2)
	ret void
}
