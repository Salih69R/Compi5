 declare i32 @printf(i8*, ...)
 declare void @exit(i32)  
 @.int_specifier = constant [4 x i8] c"%d\0A\00"
 @.str_specifier = constant [2 x i8] c"%s" 
  define void @printi(i32) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) 
  ret void  } 
  define void @print(i8*) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([2 x i8], [2 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) 
  ret void } 
  define void @checkdiv(i32) { 
	%cond = icmp eq i32 %0 , 0
	br i1 %cond , label %zero_div , label %good
zero_div:
	%str = alloca [ 24 x i8]
	store [24 x i8] c"Error division by zero\0A\00" , [24 x i8]* %str
	%new_str = getelementptr [24 x i8] , [24 x i8]* %str, i64 0, i64 0
	call void @print(i8* %new_str)
	call void @exit(i32 0)
	br label %good
good:
  ret void  } 
define i1 @func5(i1) {
func5:

	%1 = alloca i1
	store i1 %0 , i1* %1
	%2 = load i1, i1* %1
	br i1 %2 , label @, label %label_29
label_29:
	%3 = alloca i1
	%4 = load i1 , i1* %1
	%5 = add i1 1 , %4
	store i1 %5 , i1* %3
	br label %label_35
label_35:
	%6 = load i1, i1* %3
	br i1 %6 , label @, label %label_38
label_38:
	%7 = alloca i1
	%8 = load i1 , i1* %1
	store i1 %8 , i1* %7
	%9 = load i1 , i1* %7
	ret i1 %9
}
define void @main() {
main:

	%0 = add i1 0 , 1
	%1 = call i1 @func5(i1 true)
	%2 = alloca i1
	store i1 %1 , i1* %2
	%3 = load i1, i1* %2
	br i1 %3 , label %label_54, label %label_60
label_54:
	%4 = alloca [6 x i8]
	store [6 x i8] c"true\0A\00" , [6 x i8]* %4
	%5 = getelementptr [6 x i8] , [6 x i8]* %4, i64 0, i64 0
	call void @print(i8* %5)
	br label %label_66
label_60:
	%6 = alloca [7 x i8]
	store [7 x i8] c"false\0A\00" , [7 x i8]* %6
	%7 = getelementptr [7 x i8] , [7 x i8]* %6, i64 0, i64 0
	call void @print(i8* %7)
	br label %label_66
label_66:
	ret void
}
