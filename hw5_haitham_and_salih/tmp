 declare i32 @printf(i8*, ...)
 declare void @exit(i32)  
 @.int_specifier = constant [4 x i8] c"%d\0A\00"
 @.str_specifier = constant [2 x i8] c"%s" 
  define void @printi(i32) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([4 x i8], [4 x i8]* @.int_specifier, i32 0, i32 0), i32 %0) 
  ret void  } 
  define void @print(i8*) { 
  call i32 (i8*, ...) @printf(i8* getelementptr ([2 x i8], [2 x i8]* @.str_specifier, i32 0, i32 0), i8* %0) 
  ret void } 
  define void @checkdiv(i32) { 
	%cond = icmp eq i32 %0 , 0
	br i1 %cond , label %zero_div , label %good
zero_div:
	%str = alloca [ 24 x i8]
	store [24 x i8] c"Error division by zero\0A\00" , [24 x i8]* %str
	%new_str = getelementptr [24 x i8] , [24 x i8]* %str, i64 0, i64 0
	call void @print(i8* %new_str)
	call void @exit(i32 0)
	br label %good
good:
  ret void  } 
define void @main() {
main:

	%0 = alloca i1
	%1 = add i32  0 , 1
	%2 = add i32  0 , 1
	%3 = icmp ne  i32 %1 , %2
	store i1 %3 , i1* %0
				 NOW IN: NOT BOOLEXP
	%4 = alloca i1
	%5 = load i1 , i1* %0
	store i1 %5 , i1* %4
	%6 = load i1, i1* %4
	br i1 %6 , label %label_36, label %label_59
label_36:
	%7 = alloca i1
	%8 = add i32  0 , 8
	%9 = add i32  0 , 2
	%10 = icmp sge  i32 %8 , %9
	store i1 %10 , i1* %7
	br label %label_43
label_43:
	%11 = load i1, i1* %7
	br i1 %11 , label %label_46, label %label_59
label_46:
				 NOW IN: BOOLEXP AND BOOLEXP
	%12 = alloca i1
	%13 = load i1 , i1* %4
	store i1 %13 , i1* %12
	%14 = load i1, i1* %12
	br i1 %14 , label %label_53, label %label_59
label_53:
	%15 = alloca [6 x i8]
	store [6 x i8] c"good\0A\00" , [6 x i8]* %15
	%16 = getelementptr [6 x i8] , [6 x i8]* %15, i64 0, i64 0
	call void @print(i8* %16)
	br label %label_59
label_59:
	ret void
}
